import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";
import NavigationMenu from "../components/NavigationMenu/NavigationMenu";
import Carousel from "../components/Carousel/Carousel";
import { api } from "~/utils/api";
import { createClient } from "next-sanity";
import { GetStaticProps } from "next";
import Card from "../components/Card/Card";
type Event = {
  _id: string;
  title: string;
  promoters: string;
  venue: string;
  date: string;
  link: string;
  imgURL: string;
};
import EmailSignup from "~/components/EmailSignup/EmailSignup";

const Home: NextPage<{ events: Event[] }> = ({ events }) => {
  return (
    <>
      <Head>
        <title>Vital Events</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div></div>
      <main className="flex min-h-screen flex-col items-center justify-center bg-white bg-gradient-to-t ">
        <div className="grid items-center justify-center gap-8 px-20 text-center sm:grid-cols-1 md:grid-cols-2">
          {events.map(
            ({ _id, title, promoters, venue, date, link, imgURL }) => (
              <Card
                key={_id}
                title={title}
                promoters={promoters}
                venue={venue}
                date={new Date(date).toLocaleDateString("en-us", {
                  weekday: "long",
                  year: "numeric",
                  month: "numeric",
                  day: "numeric",
                })}
                link={link}
                imgURL={imgURL}
              />
            )
          )}
        </div>
        <EmailSignup />
      </main>
    </>
  );
};

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};

const client = createClient({
  projectId: "z85r7ph3",
  dataset: "production",
  useCdn: false,
  apiVersion: "2023-03-02",
});

export const getStaticProps: GetStaticProps = async () => {
  const events = await client.fetch(`*[_type == "event"]{
    _id,
    title,
    promoters,
    venue,
    date,
    link,
    'imgURL': image.asset->url
  }`);
  return {
    props: {
      events,
    },
  };
};
export default Home;
